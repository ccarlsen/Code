// CODEMIRROR
.CodeMirror {
	height: 100%;
	background: transparent;
	color: $dark;
	font-family: "Roboto Mono", monospace;
	font-size: 12px;
	font-weight: 500;
}
.CodeMirror-gutters {
	background: $grey;
	border: none;
}
.CodeMirror-linenumber {
	color: #A0A1A7;
	transform: scale(0.8);
}
.CodeMirror-cursor {
	border-left: 2px solid black;
}
.CodeMirror-selected {
	background: rgba(black, 0.2);
}
.CodeMirror-focused .CodeMirror-selected {
	background: rgba(black, 0.2);
}
body[data-user="1"] {
	.CodeMirror-cursor {
		border-left: 2px solid $blue;
	}
	.CodeMirror-selected {
		background: rgba($blue, 0.2);
	}
	.CodeMirror-focused .CodeMirror-selected {
		background: rgba($blue, 0.2);
	}	
}
body[data-user="2"] {
	.CodeMirror-cursor {
		border-left: 2px solid $pink;
	}
	.CodeMirror-selected {
		background: rgba($pink, 0.2);
	}
	.CodeMirror-focused .CodeMirror-selected {
		background: rgba($pink, 0.2);
	}	
}
body[data-user="3"] {
	.CodeMirror-cursor {
		border-left: 2px solid $green;
	}
	.CodeMirror-selected {
		background: rgba($green, 0.2);
	}
	.CodeMirror-focused .CodeMirror-selected {
		background: rgba($green, 0.2);
	}	
}
body[data-user="4"] {
	.CodeMirror-cursor {
		border-left: 2px solid $orange;
	}
	.CodeMirror-selected {
		background: rgba($orange, 0.2);
	}
	.CodeMirror-focused .CodeMirror-selected {
		background: rgba($orange, 0.2);
	}	
}


// THEME
.cm-s-default .cm-keyword {color: #A151D2;}
.cm-s-default .cm-number {color: #ED5C65;}
.cm-s-default .cm-def {color: #F18C16;}
.cm-s-default .cm-variable {color: #2795EE;}
.cm-s-default .cm-variable-2 {color: #2795EE;}
.cm-s-default .cm-variable-3 {color: #249D7F;}
.cm-s-default .cm-comment {color: #A0A1A7;}
.cm-s-default .cm-string {color: #249D7F;}
.cm-s-default .cm-meta {color: #39464E;}
.cm-s-default .cm-builtin {color: #F18C16;}
.cm-s-default .cm-tag.cm-bracket {color: #39464E;}
.cm-s-default .cm-tag {color: #2795EE;}
.cm-s-default .cm-attribute {color: #f18c16;}


// CUSTOM
*[class*="custom-selection-"] {
	position: relative;
	&:before {
		content: "";
		width: 100%;
		height: 16px;
		background: rgba(black, 0.2);
		position: absolute;
		top: -1px; left: 0;
		z-index: -1;
	}
}
.custom-selection-1 { &:before { background: rgba($blue, 0.2); } }
.custom-selection-2 { &:before { background: rgba($pink, 0.2); } }
.custom-selection-3 { &:before { background: rgba($green, 0.2); } }
.custom-selection-4 { &:before { background: rgba($orange, 0.2); } }

.custom-cursor {
	width: 0px;
	height: 16px;
	border-left: 2px solid black;
	position: absolute;
	transform: translate(4px, 4px);
	&[data-user="1"] { border-color: $blue; }
	&[data-user="2"] { border-color: $pink; }
	&[data-user="3"] { border-color: $green; }
	&[data-user="4"] { border-color: $orange; }
}


// SCROLLBAR
.CodeMirror-simplescroll-horizontal div,
.CodeMirror-simplescroll-vertical div {
	background: white;
	box-shadow: 0 0 5px rgba(black, 0.1);
	border: none;
	border-radius: 0;
}
.CodeMirror-simplescroll-horizontal,
.CodeMirror-simplescroll-vertical {
	background: $grey;
}
.CodeMirror-gutter-filler,
.CodeMirror-scrollbar-filler {
	background: $grey;
}


// MATCH BRACKETS
div.CodeMirror span.CodeMirror-matchingbracket {
	color: inherit;
	position: relative;
	&:after {
		content: "";
		width: 100%;
		height: 1px;
		background: $dark;
		position: absolute;
		bottom: -1px; left: 0;
	}
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
	color: #f00;
}

// MATCH TAGS
div.CodeMirror span.CodeMirror-matchingtag {
	background: inherit;
	position: relative;
	&:after {
		content: "";
		width: 100%;
		height: 1px;
		background: $dark;
		position: absolute;
		bottom: -1px; left: 0;
		display: none;
	}
}
div.CodeMirror span.cm-tag.CodeMirror-matchingtag {
	&:after {
		display: block;
	}
}
div.CodeMirror span.cm-bracket.CodeMirror-matchingtag {
	&:after {
		display: none;
	}
}


// BASE
body[data-user="1"] {
	::selection {
		background: rgba($blue, 0.2);
	}
}
body[data-user="2"] {
	::selection {
		background: rgba($pink, 0.2);
	}
}
body[data-user="3"] {
	::selection {
		background: rgba($green, 0.2);
	}
}
body[data-user="4"] {
	::selection {
		background: rgba($orange, 0.2);
	}
}


// GUTTER
.gutter {
	height: 100%;
	background: white;
	border-right: 1px solid $grey - 20;
	position: relative;
	float: left;
	cursor: ew-resize;
	&:before {
		content: "";
		width: 3px;
		height: 3px;
		background: $grey - 20;
		border-radius: 100%;
		box-shadow: 0 -5px 0 0px $grey - 20, 0 5px 0 0px $grey - 20;
		position: absolute;
		top: 50%; left: 50%;
		transform: translate(-50%, -50%);
	}
}